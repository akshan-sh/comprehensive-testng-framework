<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="7" failed="2" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-29T05:05:32 GMT+05:30" name="Suite" finished-at="2022-07-29T05:07:39 GMT+05:30" duration-ms="127335">
    <groups>
    </groups>
    <test started-at="2022-07-29T05:05:32 GMT+05:30" name="Test" finished-at="2022-07-29T05:07:39 GMT+05:30" duration-ms="127335">
      <class name="com.pg.tide.runnable.Runner">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:32 GMT+05:30" name="beforeTest" finished-at="2022-07-29T05:05:32 GMT+05:30" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="initializer()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:32 GMT+05:30" name="initializer" finished-at="2022-07-29T05:05:37 GMT+05:30" duration-ms="4470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializer -->
        <test-method signature="CalculateSavingsForSwitchingToColdWater()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:37 GMT+05:30" name="CalculateSavingsForSwitchingToColdWater" finished-at="2022-07-29T05:05:40 GMT+05:30" duration-ms="3278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CalculateSavingsForSwitchingToColdWater -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:40 GMT+05:30" name="tearDown" finished-at="2022-07-29T05:05:41 GMT+05:30" duration-ms="606" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CalculateSavingsForSwitchingToColdWater status=SUCCESS method=Runner.CalculateSavingsForSwitchingToColdWater()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initializer()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:41 GMT+05:30" name="initializer" finished-at="2022-07-29T05:05:44 GMT+05:30" duration-ms="3557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializer -->
        <test-method signature="CustomStainCheck()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:44 GMT+05:30" name="CustomStainCheck" finished-at="2022-07-29T05:05:47 GMT+05:30" duration-ms="3199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CustomStainCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:47 GMT+05:30" name="tearDown" finished-at="2022-07-29T05:05:47 GMT+05:30" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CustomStainCheck status=SUCCESS method=Runner.CustomStainCheck()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initializer()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:47 GMT+05:30" name="initializer" finished-at="2022-07-29T05:05:52 GMT+05:30" duration-ms="4282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializer -->
        <test-method signature="browseByNeedFebreze()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:52 GMT+05:30" name="browseByNeedFebreze" finished-at="2022-07-29T05:05:56 GMT+05:30" duration-ms="4564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browseByNeedFebreze -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:56 GMT+05:30" name="tearDown" finished-at="2022-07-29T05:05:57 GMT+05:30" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browseByNeedFebreze status=SUCCESS method=Runner.browseByNeedFebreze()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initializer()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:05:57 GMT+05:30" name="initializer" finished-at="2022-07-29T05:06:00 GMT+05:30" duration-ms="3604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializer -->
        <test-method signature="changeLanguage()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:00 GMT+05:30" name="changeLanguage" finished-at="2022-07-29T05:06:04 GMT+05:30" duration-ms="3582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeLanguage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:04 GMT+05:30" name="tearDown" finished-at="2022-07-29T05:06:04 GMT+05:30" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=changeLanguage status=SUCCESS method=Runner.changeLanguage()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initializer()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:04 GMT+05:30" name="initializer" finished-at="2022-07-29T05:06:08 GMT+05:30" duration-ms="3720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializer -->
        <test-method signature="checkContactUsIframe()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:08 GMT+05:30" name="checkContactUsIframe" finished-at="2022-07-29T05:06:12 GMT+05:30" duration-ms="3936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContactUsIframe -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:12 GMT+05:30" name="tearDown" finished-at="2022-07-29T05:06:12 GMT+05:30" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkContactUsIframe status=SUCCESS method=Runner.checkContactUsIframe()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initializer()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:12 GMT+05:30" name="initializer" finished-at="2022-07-29T05:06:16 GMT+05:30" duration-ms="4597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializer -->
        <test-method signature="checkPartCompanies()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:16 GMT+05:30" name="checkPartCompanies" finished-at="2022-07-29T05:06:42 GMT+05:30" duration-ms="25947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPartCompanies -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:42 GMT+05:30" name="tearDown" finished-at="2022-07-29T05:06:43 GMT+05:30" duration-ms="336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPartCompanies status=SUCCESS method=Runner.checkPartCompanies()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initializer()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:43 GMT+05:30" name="initializer" finished-at="2022-07-29T05:06:47 GMT+05:30" duration-ms="4624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializer -->
        <test-method signature="login()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:47 GMT+05:30" name="login" finished-at="2022-07-29T05:06:56 GMT+05:30" duration-ms="8386" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[System marked us as spam probably]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: System marked us as spam probably
at org.testng.Assert.fail(Assert.java:110)
at com.pg.tide.pageobjects.SignUpNowPGPage.login(SignUpNowPGPage.java:100)
at com.pg.tide.runnable.Runner.login(Runner.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:56 GMT+05:30" name="tearDown" finished-at="2022-07-29T05:06:56 GMT+05:30" duration-ms="427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=Runner.login()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initializer()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:06:56 GMT+05:30" name="initializer" finished-at="2022-07-29T05:07:01 GMT+05:30" duration-ms="4365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializer -->
        <test-method signature="registration()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:07:01 GMT+05:30" name="registration" finished-at="2022-07-29T05:07:09 GMT+05:30" duration-ms="8137" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[User already registered]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: User already registered
at org.testng.Assert.fail(Assert.java:110)
at com.pg.tide.pageobjects.SignUpNowPGPage.signUp(SignUpNowPGPage.java:44)
at com.pg.tide.runnable.Runner.registration(Runner.java:65)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registration -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:07:09 GMT+05:30" name="tearDown" finished-at="2022-07-29T05:07:09 GMT+05:30" duration-ms="602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registration status=FAILURE method=Runner.registration()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initializer()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:07:09 GMT+05:30" name="initializer" finished-at="2022-07-29T05:07:13 GMT+05:30" duration-ms="3594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializer -->
        <test-method signature="searchQuery()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:07:13 GMT+05:30" name="searchQuery" finished-at="2022-07-29T05:07:15 GMT+05:30" duration-ms="2555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchQuery -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:07:15 GMT+05:30" name="tearDown" finished-at="2022-07-29T05:07:16 GMT+05:30" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchQuery status=SUCCESS method=Runner.searchQuery()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initializer()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:07:16 GMT+05:30" name="initializer" finished-at="2022-07-29T05:07:34 GMT+05:30" duration-ms="18152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializer -->
        <test-method signature="startChat()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:07:34 GMT+05:30" name="startChat" finished-at="2022-07-29T05:07:39 GMT+05:30" duration-ms="5138" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Chat is closed right now, come between 10am to 6pm]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Chat is closed right now, come between 10am to 6pm
at com.pg.tide.pageobjects.HomePage.navigateToChatWindow(HomePage.java:156)
at com.pg.tide.runnable.Runner.startChat(Runner.java:169)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startChat -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:07:39 GMT+05:30" name="tearDown" finished-at="2022-07-29T05:07:39 GMT+05:30" duration-ms="435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=startChat status=SKIP method=Runner.startChat()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.pg.tide.runnable.Runner@56673b2c]" started-at="2022-07-29T05:07:39 GMT+05:30" name="afterTest" finished-at="2022-07-29T05:07:39 GMT+05:30" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.pg.tide.runnable.Runner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
